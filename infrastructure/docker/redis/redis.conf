# infrastructure/docker/redis/redis.conf
# Redis 7.0設定ファイル - Mine-CMS開発環境用
#
# Redisは高速なインメモリデータストアです。
# CMSでは主にキャッシュとセッション管理に使用します。

# ===========================================
# 基本設定
# ===========================================
# デーモン化しない（Dockerコンテナ用）
daemonize no

# プロセスIDファイル
pidfile /var/run/redis_6379.pid

# ポート番号
port 6379

# TCP listen() のバックログ
# 高負荷時の接続待ちキューのサイズ
tcp-backlog 511

# バインドするIPアドレス
# 0.0.0.0 は全てのインターフェースで待ち受け（開発環境用）
bind 0.0.0.0

# Unixソケットの設定（より高速な接続方法）
# unixsocket /var/run/redis/redis.sock
# unixsocketperm 700

# 接続がアイドル状態のタイムアウト（秒）
# 0 = 無効
timeout 0

# TCP keepalive
# 接続の生存確認を定期的に行う
tcp-keepalive 300

# ===========================================
# ログ設定
# ===========================================
# ログレベル
# debug, verbose, notice, warning のいずれか
# 開発環境では notice が適切
loglevel notice

# ログファイル
# 標準出力に出力（Dockerログで確認可能）
logfile stdout

# syslogの使用
# syslog-enabled no

# データベース数
# Redisは0から15までの16個のデータベースを持てます
databases 16

# ===========================================
# 永続化設定（RDB）
# ===========================================
# スナップショットの保存条件
# save <秒> <変更されたキー数>
# 以下の設定は：
# - 900秒（15分）で1個以上のキーが変更された場合
# - 300秒（5分）で10個以上のキーが変更された場合
# - 60秒（1分）で10000個以上のキーが変更された場合
save 900 1
save 300 10
save 60 10000

# RDB圧縮を有効化
# CPUを使用してディスク使用量を削減
rdbcompression yes

# RDBチェックサムを有効化
# データ整合性の確認（若干のパフォーマンス低下）
rdbchecksum yes

# RDBファイル名
dbfilename dump.rdb

# RDBファイルの保存ディレクトリ
dir /data

# ===========================================
# 永続化設定（AOF）
# ===========================================
# AOF（Append Only File）を無効化
# 開発環境ではRDBのみで十分
appendonly no

# AOFファイル名
# appendfilename "appendonly.aof"

# AOFの同期方法
# appendfsync everysec

# ===========================================
# メモリ管理
# ===========================================
# 最大メモリ使用量
# 開発環境では512MBに制限
maxmemory 256mb

# メモリが満杯になった時の動作
# allkeys-lru: 全てのキーからLRU（最近最も使われていない）で削除
# volatile-lru: 有効期限付きキーからLRUで削除
# allkeys-random: 全てのキーからランダムに削除
# volatile-random: 有効期限付きキーからランダムに削除
# volatile-ttl: 有効期限が最も近いキーから削除
# noeviction: 削除しない（書き込みエラーを返す）
maxmemory-policy allkeys-lru

# LRUサンプル数
# より大きい値はより正確なLRUだが、CPUを使用
maxmemory-samples 5

# ===========================================
# レプリケーション設定
# ===========================================
# レプリカ優先度
# 低い値ほど優先度が高い
replica-priority 100

# レプリケーションの設定
replica-serve-stale-data yes
replica-read-only yes
repl-diskless-sync no
repl-diskless-sync-delay 5
repl-disable-tcp-nodelay no

# ===========================================
# セキュリティ設定
# ===========================================
# パスワード設定
# 開発環境では無効（本番環境では必須）
requirepass team_insight_redis_password

# コマンドの無効化
# 危険なコマンドを無効化してセキュリティ向上
# rename-command FLUSHDB ""
# rename-command FLUSHALL ""
# rename-command KEYS ""
# rename-command CONFIG ""

# ===========================================
# クライアント設定
# ===========================================
# 最大同時接続クライアント数
maxclients 10000

# ===========================================
# 低速ログ設定
# ===========================================
# 低速とみなすマイクロ秒数
slowlog-log-slower-than 10000

# 低速ログの最大長
slowlog-max-len 128

# ===========================================
# 遅延モニタリング
# ===========================================
# 遅延モニタリングのしきい値（ミリ秒）
latency-monitor-threshold 0

# ===========================================
# イベント通知
# ===========================================
# キースペース通知
# K: キースペースイベント
# E: キーイベント
# g: 一般的なコマンド
# $: 文字列コマンド
# l: リストコマンド
# s: セットコマンド
# h: ハッシュコマンド
# z: ソート済みセットコマンド
# x: 期限切れイベント
# e: 削除イベント
# A: g$lshzxeのエイリアス
notify-keyspace-events ""

# ===========================================
# 高度な設定
# ===========================================
# ハッシュテーブルのリサイズ
hash-max-ziplist-entries 512
hash-max-ziplist-value 64

# リスト
list-max-ziplist-size -2
list-compress-depth 0

# セット
set-max-intset-entries 512

# ソート済みセット
zset-max-ziplist-entries 128
zset-max-ziplist-value 64

# HyperLogLog
hll-sparse-max-bytes 3000

# ストリーム
stream-node-max-bytes 4096
stream-node-max-entries 100

# アクティブリハッシュ
activerehashing yes

# クライアント出力バッファ制限
# normal: 通常のクライアント
# replica: レプリカクライアント
# pubsub: Pub/Subクライアント
client-output-buffer-limit normal 0 0 0
client-output-buffer-limit replica 256mb 64mb 60
client-output-buffer-limit pubsub 32mb 8mb 60

# ===========================================
# 周波数設定
# ===========================================
# 内部タスクの実行頻度
hz 10

# 動的周波数
dynamic-hz yes

# ===========================================
# インクルードファイル
# ===========================================
# 追加の設定ファイルを読み込む
# include /etc/redis/redis-local.conf

# Redis Configuration
protected-mode yes
