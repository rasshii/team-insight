# 本番環境用のDockerfile
FROM php:8.2-fpm-alpine AS builder

WORKDIR /var/www/html

# 必要なパッケージをインストール
RUN apk add --no-cache \
    freetype-dev \
    libjpeg-turbo-dev \
    libpng-dev \
    libwebp-dev \
    libxml2-dev \
    icu-dev \
    libzip-dev \
    zip \
    unzip \
    postgresql-dev \
    curl \
    git \
    autoconf \
    g++ \
    make \
    imagemagick-dev \
    imagemagick

# PHP拡張のインストール
RUN docker-php-ext-install \
    gd \
    pdo \
    pdo_mysql \
    pdo_pgsql \
    intl \
    mbstring \
    xml \
    zip \
    bcmath \
    pcntl \
    sockets \
    opcache

# PECL拡張のインストール
RUN pecl install \
    redis \
    imagick \
    apcu \
    && docker-php-ext-enable \
    redis \
    imagick \
    apcu

# Composerのインストール
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

# アプリケーションファイルをコピー
COPY . .

# Composerの依存関係をインストール（本番環境用）
RUN composer install --no-dev --optimize-autoloader

# 本番環境用のPHP設定
RUN echo "display_errors=Off" >> /usr/local/etc/php/conf.d/docker-php-ext-opcache.ini \
    && echo "error_reporting=E_ALL & ~E_DEPRECATED & ~E_STRICT" >> /usr/local/etc/php/conf.d/docker-php-ext-opcache.ini \
    && echo "opcache.enable=1" >> /usr/local/etc/php/conf.d/docker-php-ext-opcache.ini \
    && echo "opcache.memory_consumption=256" >> /usr/local/etc/php/conf.d/docker-php-ext-opcache.ini \
    && echo "opcache.max_accelerated_files=20000" >> /usr/local/etc/php/conf.d/docker-php-ext-opcache.ini \
    && echo "opcache.validate_timestamps=0" >> /usr/local/etc/php/conf.d/docker-php-ext-opcache.ini

# 本番環境用のイメージ
FROM php:8.2-fpm-alpine

WORKDIR /var/www/html

# 必要なパッケージをインストール
RUN apk add --no-cache \
    freetype-dev \
    libjpeg-turbo-dev \
    libpng-dev \
    libwebp-dev \
    libxml2-dev \
    icu-dev \
    libzip-dev \
    postgresql-dev \
    nginx \
    supervisor

# PHP拡張のインストール
RUN docker-php-ext-install \
    gd \
    pdo \
    pdo_mysql \
    pdo_pgsql \
    intl \
    mbstring \
    xml \
    zip \
    bcmath \
    pcntl \
    sockets \
    opcache

# PECL拡張のインストール
RUN pecl install \
    redis \
    imagick \
    apcu \
    && docker-php-ext-enable \
    redis \
    imagick \
    apcu

# ビルド成果物をコピー
COPY --from=builder /var/www/html /var/www/html

# パーミッションの設定
RUN chown -R www-data:www-data /var/www/html \
    && chmod -R 755 /var/www/html/storage

# Nginx設定
COPY infrastructure/docker/nginx/default.conf /etc/nginx/conf.d/default.conf

# Supervisor設定
COPY infrastructure/docker/backend/supervisord.conf /etc/supervisord.conf

# ポートの公開
EXPOSE 80

# SupervisorでNginxとPHP-FPMを起動
CMD ["/usr/bin/supervisord", "-n", "-c", "/etc/supervisord.conf"] 
