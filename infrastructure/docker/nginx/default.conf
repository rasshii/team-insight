# infrastructure/docker/nginx/default.conf
# Nginx設定ファイル - Mine-CMS開発環境用
#
# Nginxは高性能なWebサーバーで、ここではリバースプロキシとして使用します。
# リバースプロキシは、クライアントからのリクエストを適切なバックエンドサーバーに転送します。

# アップストリーム定義
# アップストリームは、Nginxが転送先として使用するバックエンドサーバーのグループです
upstream frontend {
    # Next.jsの開発サーバー
    # frontendはdocker-compose.ymlで定義したサービス名
    server frontend:3000;
}

upstream backend {
    # Laravel APIサーバー
    server backend:8000;
}

# HTTPサーバー設定
server {
    # 80番ポートでリッスンします
    listen 80;
    # サーバー名（開発環境では特に指定不要）
    server_name localhost;
    root /var/www/backend/public;
    index index.php;

    # アクセスログとエラーログの設定
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # クライアントのリクエストボディの最大サイズ
    # ファイルアップロードを考慮して100MBに設定
    client_max_body_size 100M;

    # タイムアウト設定
    # 開発環境では長めに設定（デバッグ時に便利）
    proxy_connect_timeout 600;
    proxy_send_timeout 600;
    proxy_read_timeout 600;
    send_timeout 600;

    # ===========================================
    # API（バックエンド）へのプロキシ設定
    # ===========================================
    location /api {
        # /apiで始まるリクエストはLaravelに転送
        proxy_pass http://backend;
        
        # プロキシヘッダーの設定
        # これらのヘッダーにより、バックエンドは元のリクエスト情報を取得できます
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket対応（リアルタイム通信用）
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # バッファリング設定
        # 開発環境ではバッファリングを無効にしてレスポンスを高速化
        proxy_buffering off;
    }

    # ===========================================
    # 静的ファイル（Laravel）の配信
    # ===========================================
    location /storage {
        # Laravelのpublic/storageディレクトリを直接配信
        alias /var/www/backend/public/storage;
        
        # 静的ファイルの有効期限を設定
        expires 1y;
        add_header Cache-Control "public, immutable";
        
        # アクセス制御
        add_header X-Content-Type-Options "nosniff";
    }

    # ===========================================
    # 管理画面用のプロキシ設定
    # ===========================================
    location /admin {
        # 管理画面もLaravelが処理
        proxy_pass http://backend;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # ===========================================
    # GraphQL エンドポイント（オプション）
    # ===========================================
    location /graphql {
        proxy_pass http://backend;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # GraphQL特有の設定
        # POSTメソッドのみ許可
        limit_except POST {
            deny all;
        }
    }

    # ===========================================
    # ヘルスチェックエンドポイント
    # ===========================================
    location /health {
        # Nginx自体のヘルスチェック
        access_log off;
        add_header Content-Type text/plain;
        return 200 'healthy';
    }

    # ===========================================
    # フロントエンド（Next.js）へのプロキシ設定
    # ===========================================
    location / {
        # その他のリクエストはNext.jsに転送
        proxy_pass http://frontend;
        
        # プロキシヘッダーの設定
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Next.jsの開発サーバー用WebSocket設定
        # ホットリロードに必要
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # エラーページの処理
        proxy_intercept_errors on;
        error_page 502 503 504 /50x.html;
    }

    # ===========================================
    # エラーページの設定
    # ===========================================
    location = /50x.html {
        root /usr/share/nginx/html;
    }

    # ===========================================
    # セキュリティヘッダー
    # ===========================================
    # XSS対策
    add_header X-XSS-Protection "1; mode=block";
    # クリックジャッキング対策
    add_header X-Frame-Options "SAMEORIGIN";
    # コンテンツタイプの推測を防ぐ
    add_header X-Content-Type-Options "nosniff";
    # リファラー情報の制御
    add_header Referrer-Policy "strict-origin-when-cross-origin";
    
    # ===========================================
    # Gzip圧縮設定
    # ===========================================
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss application/rss+xml application/atom+xml image/svg+xml;
}
