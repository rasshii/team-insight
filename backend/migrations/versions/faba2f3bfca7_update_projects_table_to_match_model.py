"""Update projects table to match model

Revision ID: faba2f3bfca7
Revises: 78bde5c0eced
Create Date: 2025-06-25 15:20:40.359238

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'faba2f3bfca7'
down_revision: Union[str, None] = '78bde5c0eced'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Drop foreign key constraints first (if they exist)
    try:
        op.drop_constraint('tasks_project_id_fkey', 'tasks', type_='foreignkey', schema='team_insight')
    except:
        pass  # Constraint might not exist
    
    try:
        op.drop_constraint('projects_team_id_fkey', 'projects', type_='foreignkey', schema='team_insight')
    except:
        pass  # Constraint might not exist
    
    # Drop unused columns
    try:
        op.drop_column('projects', 'team_id', schema='team_insight')
    except:
        pass
    
    try:
        op.drop_column('projects', 'status', schema='team_insight')
    except:
        pass
    
    # Add new columns
    op.add_column('projects', sa.Column('backlog_id', sa.Integer(), nullable=False), schema='team_insight')
    op.add_column('projects', sa.Column('project_key', sa.String(), nullable=False), schema='team_insight')
    
    # Alter existing columns
    op.alter_column('projects', 'name',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(),
               existing_nullable=False,
               schema='team_insight')
    
    op.alter_column('projects', 'created_at',
               existing_type=sa.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True,
               schema='team_insight')
    
    op.alter_column('projects', 'updated_at',
               existing_type=sa.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True,
               schema='team_insight')
    
    # Add unique constraints
    op.create_unique_constraint(None, 'projects', ['backlog_id'], schema='team_insight')
    op.create_unique_constraint(None, 'projects', ['project_key'], schema='team_insight')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'projects', type_='unique', schema='team_insight')
    op.drop_constraint(None, 'projects', type_='unique', schema='team_insight')
    
    op.drop_column('projects', 'project_key', schema='team_insight')
    op.drop_column('projects', 'backlog_id', schema='team_insight')
    
    op.add_column('projects', sa.Column('status', sa.VARCHAR(length=50), nullable=False), schema='team_insight')
    op.add_column('projects', sa.Column('team_id', sa.INTEGER(), nullable=True), schema='team_insight')
    
    op.alter_column('projects', 'updated_at',
               existing_type=sa.DateTime(),
               type_=sa.TIMESTAMP(timezone=True),
               existing_nullable=True,
               schema='team_insight')
    
    op.alter_column('projects', 'created_at',
               existing_type=sa.DateTime(),
               type_=sa.TIMESTAMP(timezone=True),
               existing_nullable=True,
               schema='team_insight')
    
    op.alter_column('projects', 'name',
               existing_type=sa.String(),
               type_=sa.VARCHAR(length=255),
               existing_nullable=False,
               schema='team_insight')
    # ### end Alembic commands ###
